Битовая упаковка
Написать программу-упаковщик чисел.

Пользователь вводит количество чисел для упаковки (не более 255) и сами числа (от 0 до 255)

Упаковать необходимо в массив типа char следующего формата:

нулевой элемент - количество чисел,
следующие элементы (обозначим их количество за k) предназначены для хранения количества значащих битов в упаковываемых числах 
(старшие полбайта первого элемента массива относятся к 1му числу, младшие полбайта - ко 2му; старшие полбайта второго элемента 
массива относятся к 3му числу и т.д.; если количество упаковываемых чисел нечётное - соответствующие полбайта содержит нули)
оставшиеся элементы массива содержат упакованные значащие биты, начало этой битовой последовательности должно быть прижато к 
левому краю k+2-го элемента массива
Программа-упаковщик должна быть оформлена в виде функции, которая принимает в качестве параметров указатель на массив введённых 
чисел (тип char*), количество элементов, другие необходимые параметры. Возвращать функция должна указатель на массив упакованных 
чисел (тип char *). Память под массив исходных чисел выделяется в main(), память под массив упаковки - внутри функции. Эти массивы 
должны быть динамическими. Функцию realloc() использовать запрещено.

Пример. Пользователь вводит числа 2, 3 и 253. Таким образом, первое число 2 - это количество чисел, а 3 253 сами числа. Бинарные 
записи этих чисел: 2 - 10, 3 - 11, 253 - 1111 1101. Количества значащих бит в числах 3 и 255: 2(10) и 8 (1000). Массив упаковки 
будет выглядеть следующим образом: 0000 0010 | 0010 1000 | 1111 1111 | 0100 0000

Input format
Последовательность целых чисел

Output format
последовательность бит упакованного массива в виде 0 и 1, отделяемых пробелом через каждые 8 элементов
