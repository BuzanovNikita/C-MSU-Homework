Работа со строками
Реализовать собственные аналоги функций strlen, strcmp, strstr. Назвать их my_strlen, my_strcmp, my_strstr. Интерфейс функций 
(аргументы и возвращаемое значение) должен быть такой же, как у аналогичных функций из string.h. Использовать сами функции из 
string.h запрещено.
Реализовать функции print_str_arr (распечатка массива строк char **) и search_arr (поиск заданного количества вхождений некоторой 
подстроки в массиве строк char **; использовать свои функции из п.1; использовать функции из string.h запрещено). Функция search_arr 
должна распечатать все строки из массива строк сhar ** (вместе с их номерами в массиве), в которых заданная подстрока встречается 
заданное число раз.
Написать программу, которая
читает из стандартного ввода несколько строк,
сохраняет эти строки в массив сhar **,
читает из командной строки подстроку и необходимое количество вхождений,
с помощью search_arr распечатавает все строки из созданного массива строк (вместе с их номерами в массиве), в которых заданная 
подстрока встречается заданное число раз.
Функции из п1,2 должны корректно обрабатывать нештатные ситуации (на вход подали указатель NULL, указали отрицательное или нулевое
кол-во вхождений подстроки и т.д.) Функция my_strlen от NULL должна возвращать минус 1. Функция my_strstr возвращает NULL, если 
один из аргументов NULL. Функция my_strcmp возвращает INT_MAX, если один из аргументов NULL.
Число строк и количество символов в каждой строке заранее неизвестно и может быть любым.
Input format
Текст подается на стандартный ввод. В командной строке два параметра: подстрока и число вхождений

Output format
%d:%s где %d номер строки в массиве, (нумерация с 1) а %s сама строка
